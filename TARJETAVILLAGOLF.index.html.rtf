{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AppleColorEmoji;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html lang="es">\
<head>\
    <meta charset="UTF-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <title>Tarjeta de Puntuaci\'f3n - Villagolf</title>\
    <script src="https://cdn.tailwindcss.com"></script>\
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">\
    <style>\
        body \{\
            font-family: 'Inter', sans-serif;\
        \}\
        /* Custom styles for better mobile experience */\
        .score-input \{\
            width: 50px;\
            height: 40px;\
            text-align: center;\
            border-radius: 0.5rem;\
            border: 1px solid #D1D5DB;\
            -moz-appearance: textfield;\
        \}\
        .score-input::-webkit-outer-spin-button,\
        .score-input::-webkit-inner-spin-button \{\
            -webkit-appearance: none;\
            margin: 0;\
        \}\
        .table-container \{\
            width: 100%;\
            overflow-x: auto;\
            -webkit-overflow-scrolling: touch;\
        \}\
        th, td \{\
            white-space: nowrap;\
            padding: 0.75rem;\
        \}\
        .sticky-col \{\
            position: -webkit-sticky;\
            position: sticky;\
            left: 0;\
            background-color: white;\
            z-index: 10;\
        \}\
        .dark .sticky-col \{\
            background-color: #1F2937;\
        \}\
        .trophy \{\
            color: #f59e0b; /* amber-500 */\
        \}\
    </style>\
</head>\
<body class="bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200 transition-colors duration-300">\
\
    <div class="container mx-auto p-4 max-w-7xl">\
        <header class="text-center mb-6">\
            <h1 class="text-3xl md:text-4xl font-bold text-teal-600 dark:text-teal-400 uppercase tracking-wider">Tarjeta de Puntuaci\'f3n</h1>\
            <p class="text-red-600 dark:text-red-500 mt-2 text-lg font-bold">VILLAGOLF GOLFITO</p>\
        </header>\
\
        <!-- Player Setup Section -->\
        <div id="setup-section" class="bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg mb-8">\
            <h2 class="text-2xl font-semibold mb-4 text-gray-700 dark:text-gray-300">Configuraci\'f3n del Juego</h2>\
            <div id="player-inputs" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4">\
                <!-- Player name inputs will be generated here -->\
            </div>\
            <button id="start-game-btn" class="mt-6 w-full bg-teal-500 hover:bg-teal-600 text-white font-bold py-3 px-4 rounded-lg transition-transform transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500">\
                Iniciar Juego\
            </button>\
        </div>\
\
        <!-- Scorecard Section -->\
        <div id="scorecard-section" class="hidden">\
             <div class="flex justify-between items-center mb-4 flex-wrap gap-4">\
                <h2 class="text-2xl font-semibold text-gray-700 dark:text-gray-300">Tarjeta de Puntuaci\'f3n</h2>\
                <button id="reset-game-btn" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg transition-colors">\
                    Nuevo Juego\
                </button>\
            </div>\
            <div class="table-container bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden">\
                <table class="w-full text-center">\
                    <thead id="scorecard-head" class="bg-gray-200 dark:bg-gray-700 text-sm uppercase">\
                        <!-- Header row will be generated here -->\
                    </thead>\
                    <tbody id="scorecard-body">\
                        <!-- Player rows will be generated here -->\
                    </tbody>\
                </table>\
            </div>\
             <div id="end-game-container" class="mt-6 text-center hidden">\
                <button id="end-game-btn" class="w-full md:w-auto bg-amber-500 hover:bg-amber-600 text-white font-bold py-3 px-6 rounded-lg transition-transform transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500">\
                    Finalizar y Ver Ganador\
                </button>\
            </div>\
        </div>\
    </div>\
\
    <script>\
        document.addEventListener('DOMContentLoaded', function() \{\
            const playerInputsContainer = document.getElementById('player-inputs');\
            const startGameBtn = document.getElementById('start-game-btn');\
            const setupSection = document.getElementById('setup-section');\
            const scorecardSection = document.getElementById('scorecard-section');\
            const scorecardHead = document.getElementById('scorecard-head');\
            const scorecardBody = document.getElementById('scorecard-body');\
            const resetGameBtn = document.getElementById('reset-game-btn');\
            const endGameBtn = document.getElementById('end-game-btn');\
            const endGameContainer = document.getElementById('end-game-container');\
\
            // Generate player input fields\
            for (let i = 1; i <= 8; i++) \{\
                const inputDiv = document.createElement('div');\
                inputDiv.innerHTML = `\
                    <label for="player$\{i\}" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Jugador $\{i\}</label>\
                    <input type="text" id="player$\{i\}" name="player$\{i\}" placeholder="Nombre del Jugador $\{i\}" class="mt-1 block w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-teal-500 focus:border-teal-500 sm:text-sm">\
                `;\
                playerInputsContainer.appendChild(inputDiv);\
            \}\
\
            startGameBtn.addEventListener('click', function() \{\
                const playerNames = [];\
                for (let i = 1; i <= 8; i++) \{\
                    const input = document.getElementById(`player$\{i\}`);\
                    if (input.value.trim() !== '') \{\
                        playerNames.push(input.value.trim());\
                    \}\
                \}\
\
                if (playerNames.length > 0) \{\
                    setupScorecard(playerNames);\
                    setupSection.classList.add('hidden');\
                    scorecardSection.classList.remove('hidden');\
                    endGameContainer.classList.remove('hidden');\
                    endGameBtn.disabled = false;\
                \} else \{\
                    // Using a custom modal instead of alert\
                    showModal('Por favor, ingresa el nombre de al menos un jugador.');\
                \}\
            \});\
            \
            resetGameBtn.addEventListener('click', function() \{\
                if(confirm('\'bfEst\'e1s seguro de que quieres empezar un nuevo juego? Se perder\'e1n todas las puntuaciones.')) \{\
                    scorecardSection.classList.add('hidden');\
                    endGameContainer.classList.add('hidden');\
                    setupSection.classList.remove('hidden');\
                    scorecardHead.innerHTML = '';\
                    scorecardBody.innerHTML = '';\
                    // Clear player name inputs\
                    for (let i = 1; i <= 8; i++) \{\
                        document.getElementById(`player$\{i\}`).value = '';\
                    \}\
                \}\
            \});\
\
            endGameBtn.addEventListener('click', showWinner);\
\
            function setupScorecard(players) \{\
                scorecardHead.innerHTML = '';\
                scorecardBody.innerHTML = '';\
\
                const headerRow = document.createElement('tr');\
                let headerHTML = '<th class="sticky-col font-semibold">Jugador</th>';\
                for (let i = 1; i <= 9; i++) headerHTML += `<th>$\{i\}</th>`;\
                headerHTML += '<th class="font-semibold bg-teal-100 dark:bg-teal-800">OUT</th>';\
                for (let i = 10; i <= 18; i++) headerHTML += `<th>$\{i\}</th>`;\
                headerHTML += '<th class="font-semibold bg-teal-100 dark:bg-teal-800">IN</th>';\
                headerHTML += '<th class="font-semibold bg-green-100 dark:bg-green-800">TOTAL</th>';\
                headerRow.innerHTML = headerHTML;\
                scorecardHead.appendChild(headerRow);\
\
                players.forEach((name, index) => \{\
                    const playerRow = document.createElement('tr');\
                    playerRow.id = `player-row-$\{index\}`;\
                    playerRow.className = 'border-b border-gray-200 dark:border-gray-700';\
\
                    let rowHTML = `<td class="sticky-col font-medium text-left" data-name="$\{name\}">$\{name\}</td>`;\
                    \
                    for (let i = 1; i <= 18; i++) \{\
                        if (i === 10) \{\
                             rowHTML += `<td id="out-total-$\{index\}" class="font-bold text-teal-600 dark:text-teal-400 bg-teal-50 dark:bg-teal-900">0</td>`;\
                        \}\
                        rowHTML += `<td><input type="number" min="1" max="8" class="score-input bg-gray-50 dark:bg-gray-700" data-player="$\{index\}" data-hole="$\{i\}"></td>`;\
                    \}\
                    \
                    rowHTML += `<td id="in-total-$\{index\}" class="font-bold text-teal-600 dark:text-teal-400 bg-teal-50 dark:bg-teal-900">0</td>`;\
                    rowHTML += `<td id="grand-total-$\{index\}" class="font-bold text-xl text-green-600 dark:text-green-400 bg-green-50 dark:bg-green-900">0</td>`;\
\
                    playerRow.innerHTML = rowHTML;\
                    scorecardBody.appendChild(playerRow);\
                \});\
\
                document.querySelectorAll('.score-input').forEach(input => \{\
                    input.addEventListener('input', updateScores);\
                \});\
            \}\
\
            function updateScores(event) \{\
                // Enforce max value of 8\
                if (parseInt(event.target.value) > 8) \{\
                    event.target.value = 8;\
                \}\
\
                const playerIndex = event.target.dataset.player;\
                const playerRow = document.getElementById(`player-row-$\{playerIndex\}`);\
                \
                let outTotal = 0;\
                let inTotal = 0;\
\
                const allInputs = playerRow.querySelectorAll('input[data-hole]');\
                allInputs.forEach(input => \{\
                    const hole = parseInt(input.dataset.hole);\
                    const value = parseInt(input.value) || 0;\
                    if (hole <= 9) \{\
                        outTotal += value;\
                    \} else \{\
                        inTotal += value;\
                    \}\
                \});\
                \
                document.getElementById(`out-total-$\{playerIndex\}`).textContent = outTotal;\
                document.getElementById(`in-total-$\{playerIndex\}`).textContent = inTotal;\
                document.getElementById(`grand-total-$\{playerIndex\}`).textContent = outTotal + inTotal;\
            \}\
\
            function showWinner() \{\
                const playerScores = [];\
                const rows = scorecardBody.querySelectorAll('tr');\
\
                // Gather scores\
                rows.forEach(row => \{\
                    const nameCell = row.querySelector('td.sticky-col');\
                    const name = nameCell.dataset.name;\
                    const score = parseInt(row.querySelector('[id^="grand-total-"]').textContent);\
                    playerScores.push(\{ element: row, name: name, score: score \});\
                \});\
\
                // Sort players by score (lowest first)\
                playerScores.sort((a, b) => a.score - b.score);\
\
                // Re-order rows in the table\
                scorecardBody.innerHTML = '';\
                playerScores.forEach(player => \{\
                    scorecardBody.appendChild(player.element);\
                \});\
                \
                // Find winner(s) and add trophy\
                const lowestScore = playerScores.length > 0 ? playerScores[0].score : 0;\
                \
                // First, remove all existing trophies to handle re-clicks\
                document.querySelectorAll('.trophy-icon').forEach(icon => icon.remove());\
\
                playerScores.forEach(player => \{\
                    if (player.score === lowestScore) \{\
                        const nameCell = player.element.querySelector('td.sticky-col');\
                        nameCell.innerHTML = `$\{player.name\} <span class="trophy-icon" title="Ganador">
\f1 \uc0\u55356 \u57286 
\f0 </span>`;\
                    \}\
                \});\
\
                // Disable inputs and the "Finalizar" button\
                document.querySelectorAll('.score-input').forEach(input => input.disabled = true);\
                endGameBtn.disabled = true;\
            \}\
\
            // A simple modal to replace alert()\
            function showModal(message) \{\
                const modal = document.createElement('div');\
                modal.style.position = 'fixed';\
                modal.style.left = '0';\
                modal.style.top = '0';\
                modal.style.width = '100%';\
                modal.style.height = '100%';\
                modal.style.backgroundColor = 'rgba(0,0,0,0.5)';\
                modal.style.display = 'flex';\
                modal.style.justifyContent = 'center';\
                modal.style.alignItems = 'center';\
                modal.style.zIndex = '1000';\
                \
                const modalContent = document.createElement('div');\
                modalContent.style.backgroundColor = 'white';\
                modalContent.style.padding = '20px 40px';\
                modalContent.style.borderRadius = '8px';\
                modalContent.style.textAlign = 'center';\
                \
                const text = document.createElement('p');\
                text.textContent = message;\
                text.style.color = 'black';\
                text.style.marginBottom = '20px';\
                \
                const closeButton = document.createElement('button');\
                closeButton.textContent = 'OK';\
                closeButton.style.padding = '10px 20px';\
                closeButton.style.border = 'none';\
                closeButton.style.borderRadius = '5px';\
                closeButton.style.backgroundColor = '#10B981'; // Teal-500\
                closeButton.style.color = 'white';\
                closeButton.style.cursor = 'pointer';\
\
                modalContent.appendChild(text);\
                modalContent.appendChild(closeButton);\
                modal.appendChild(modalContent);\
                document.body.appendChild(modal);\
                \
                closeButton.onclick = () => \{\
                    document.body.removeChild(modal);\
                \};\
                 modal.onclick = (event) => \{\
                    if (event.target === modal) \{\
                        document.body.removeChild(modal);\
                    \}\
                \};\
            \}\
        \});\
    </script>\
\
</body>\
</html>\
}